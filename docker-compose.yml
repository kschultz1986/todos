services:
  postgres:
    image: postgres:17.2
    container_name: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: todos
      POSTGRES_HOST: postgres
      DATABASE_URL: postgres://postgres:password@postgres:5432/todos
    ports:
      - "5432:5432"
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - frontend
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - BACKEND_URL=http://backend:5000
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/todos
      SERVER_PORT: 5000
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: password
      PGDATABASE: todos
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

volumes:
  postgres_data: {}
